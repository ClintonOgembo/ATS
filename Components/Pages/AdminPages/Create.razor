@page "/admins/create"
@using Microsoft.EntityFrameworkCore
@using AttainTaskSupportSystem.Models
@using Microsoft.AspNetCore.WebUtilities
@inject IDbContextFactory<AttainTaskSupportSystem.Data.AttainTaskSupportSystemContext> DbFactory
@inject NavigationManager NavigationManager
@inject UserCreationStateService StateService


<PageTitle>Create</PageTitle>

<div class="header">
    <h1>Create User</h1>
</div>

<hr />

<div class="row">
    <div class="col-md-4">
        <EditForm Model="InputModel" method="post" OnValidSubmit="ContinueToRolePage" FormName="CreateForm">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />

            <div class="mb-3">
                <label for="fullname" class="form-label">Full Name:</label>
                <InputText id="fullname" @bind-Value="InputModel.FullName" class="form-control" />
                <ValidationMessage For="() => InputModel.FullName" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="email" class="form-label">Email:</label>
                <InputText id="email" @bind-Value="InputModel.Email" class="form-control" />
                <ValidationMessage For="() => InputModel.Email" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="role" class="form-label">Role:</label>
                <InputSelect id="role" @bind-Value="InputModel.Role" class="form-control">
                    <option value="">-- Select Role --</option>
                    <option value="Admin">Admin</option>
                    <option value="Staff">Staff</option>
                    <option value="Client">Client</option>
                </InputSelect>
                <ValidationMessage For="() => InputModel.Role" class="text-danger" />
            </div>

            <button type="submit" class="btn btn-primary">Continue</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/admins">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Input InputModel { get; set; } = new ();

    public class Input
    {
        public string FullName { get; set; }
        public string Email { get; set; }
        public string Role { get; set; }
    }

    public async Task ContinueToRolePage()
    {
        if (string.IsNullOrEmpty(InputModel.Role))
        {
            Console.WriteLine("No role selected");
            return;
        }

        // Store data in state service
        StateService.SetInitialData(InputModel.FullName, InputModel.Email, InputModel.Role);

        if (InputModel.Role == "Admin" || InputModel.Role == "Staff")
        {
            Console.WriteLine(InputModel.Role);
            NavigationManager.NavigateTo(
            $"/staff-details?fullName={Uri.EscapeDataString(InputModel.FullName)}&email={Uri.EscapeDataString(InputModel.Email)}&role={Uri.EscapeDataString(InputModel.Role)}"
            );
        }
        else
        {
            Console.WriteLine(InputModel.Role);
            NavigationManager.NavigateTo(
            $"/client-details?fullName={Uri.EscapeDataString(InputModel.FullName)}&email={Uri.EscapeDataString(InputModel.Email)}&role={Uri.EscapeDataString(InputModel.Role)}"
            );
        }
    }

}
